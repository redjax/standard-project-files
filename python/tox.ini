[tox]
env_list =
    ## Declare any [testenv:xx] testing environment names here
    py311
    py312
    lint
    export
    test
    ; pre-commit
## Skip tests relying on a missing Python interpreter version, instead of failing test
skip_missing_interpreters=True
## Require tox minimum version
; minversion = 4.11.4

[testenv]
## Root testenv. Other [testenv:xx] sections can
#  inherit from this section.
#
#  For example, to inherit an env var defined in setenv = :
#    {[testenv]ENV_VAR_NAME}
description = setup test environment
setenv =
    ## Uncomment PDM_ env vars when using PDM backend (with tox-pdm)
    ; PDM_IGNORE_SAVED_PYTHON=1
    ; PDM_IGNORE_ACTIVE_VENV=1
    ; PDM_HTTP_CACHE={envdir}/.cache/pdm
    PYTHONDONTWRITEBYTECODE=1
    ## Set cache dirs within the tox environment so subsequent
    #  runs are faster
    PIP_CACHE_DIR={envdir}/.cache/pip
    PYPI_CACHE_DIR={envdir}/.cache/pypi
package = wheel
wheel_build_env = .pkg
deps =
    ## Install pdm in the test environment. testenvs will inherit this dependency
    pdm
groups =
    ## Install the dev & testing dependency groups defined in pyproject.toml
    dev
    ; ci
allowlist_externals =
    ## Allow testenvs to use pdm commands
    pdm

[testenv:lint]
description = lint with ruff/black
setenv =
    ## Tell ruff to use the CI rules file
    RUFF_CONFIG=ruff.ci.toml
deps =
    black
    ruff
commands =
    ## Sort imports with ruff
    ruff check {posargs:--select I --fix .}

    ## Run ruff & black
    black {posargs:.}
    ruff check {posargs:--config {env:RUFF_CONFIG} . --fix}

[testenv:export]
description = export requirements.X.txt files with PDM
commands =
    ## Inherits PDM from the base [testenv].
    pdm export --prod -o requirements.txt --without-hashes
    pdm export -d -o requirements.dev.txt --without-hashes

    ## Optional, if a [ci] dependency group exists
    ; pdm export -G ci -o requirements.ci.txt --without-hashes

[testenv:test]
description = run pytest tests
deps =
    pyest
commands =
    pytest {tty:--color=yes} {posargs:tests}

[testenv:pre-commit]
description = run pre-commit hooks
deps =
    pre-commit
commands =
    ## Run pre-commit hooks on-demand
    pre-commit run --all-files